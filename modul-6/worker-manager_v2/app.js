import { Student } from './student.js'
import { createStudentArray } from './arrayCreator.js'
import { Renderer } from './renderer.js'

disableDarkModeByDefault()

let tbody = document.querySelector('tbody')

let students = await createStudentArray()
let renderer = new Renderer()
render()


// ---------------------------------
//      CRUD functions
// ---------------------------------

document.querySelector('#add-new-student-btn').addEventListener('click', addNewStudent)


function deleteStudent (e) {
    let idToDelete = e.target.dataset.studId

    fetch("https://practiceapi.nikprog.hu/Student/" + idToDelete, {
            method: "DELETE",
        })
        .then((response) => response.json())
        .then((data) => {
            console.log("Success:", data)
            
            // remove from array
            let index = students.findIndex(x => x.id === idToDelete)
            students.splice(index, 1)

            // re-render everything
            render()
        })
        .catch((error) => {
            console.error("Error:", error)
        })
}

function addNewStudent () {

    let stud = new Student(
        '', // ID will be generated by the backend
        document.querySelector('#input-name').value,
        document.querySelector('#input-isActive').value === 'true',
        document.querySelector('#input-birthYear').value,
        document.querySelector('#input-connections').value,
        document.querySelector('#input-completedCredits').value,
        document.querySelector('#input-activeSemesterCount').value,
        document.querySelector('#input-image').value
    )

    // console.log(stud)
    // console.log(JSON.stringify(stud))

    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_json_data
    fetch("https://practiceapi.nikprog.hu/Student", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(stud),
        })
        .then((response) => response.json())
        .then((data) => {
            console.log("Success:", data)

            // add response data as new Student object to the array
            students.push(new Student(
                data.id,
                data.name,
                data.isActive,
                data.birthYear,
                data.connections,
                data.completedCredits,
                data.activeSemesterCount,
                data.image
            ))
            
            console.log("STUDENTS:",students)
            
            // re-render everything
            render()
        })
        .catch((error) => {
            console.error("Error:", error)
        })
}


// ---------------------------------
//      Sorting functions
// ---------------------------------
document.querySelector('#sort-by-age-btn').addEventListener('click', sortBy)
document.querySelector('#sort-by-active-btn').addEventListener('click', sortBy)
document.querySelector('#sort-by-name-btn').addEventListener('click', sortBy)

function sortBy (param) {
    let sortByValue = param.target.dataset.param

    if(sortByValue === 'birthYear' || sortByValue === 'isActive')
        students.sort((a,b) => { return a[sortByValue] - b[sortByValue] })
    else if(sortByValue === 'name')
        students.sort((a,b) => { return a[sortByValue].localeCompare(b[sortByValue]) })
    
    render()
}

// ------------------------
//      Render
// ------------------------
function render () {
    tbody.innerHTML = renderer.renderTable(students)

    document.querySelectorAll('.delete-student-btn').forEach(x => {
        x.addEventListener('click', deleteStudent)
    })
}


// ------------------------
//      CSS handlers
// ------------------------
document.querySelector('#flexSwitchCheckDefault').addEventListener('click', switchMode)

function disableDarkModeByDefault () {
    document.styleSheets[1].disabled = true
}

function switchMode () {
    document.styleSheets[1].disabled = !document.styleSheets[1].disabled
}